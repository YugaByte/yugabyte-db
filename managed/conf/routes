# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Web Specific Routes
GET     /                           controllers.DashboardController.index()
GET     /login                      controllers.HomeController.login()
GET     /register                   controllers.HomeController.register()
GET     /createInstance             controllers.DashboardController.createInstance()
GET     /instances                  controllers.DashboardController.instances()
GET     /tables                     controllers.DashboardController.tables()
GET     /profile                    controllers.DashboardController.profile()
GET     /instances/:iUUID           controllers.DashboardController.showInstance(iUUID: java.util.UUID)

# API Specific Routes
POST    /api/login                  controllers.SessionController.login()
GET     /api/logout                 controllers.SessionController.logout()
POST    /api/register               controllers.SessionController.register()
GET     /api/tables                 controllers.yb.TablesController.list()
GET     /api/tablet-servers         controllers.yb.TabletServerController.list()

# Cloud Specific API
GET     /api/providers              controllers.cloud.ProviderController.list()
POST    /api/providers              controllers.cloud.ProviderController.create()
GET     /api/providers/:pUUID/regions  controllers.cloud.RegionController.list(pUUID: java.util.UUID)
POST    /api/providers/:pUUID/regions  controllers.cloud.RegionController.create(pUUID: java.util.UUID)
GET     /api/providers/:pUUID/regions/:rUUID/zones    controllers.cloud.AvailabilityZoneController.list(pUUID: java.util.UUID, rUUID: java.util.UUID)
POST    /api/providers/:pUUID/regions/:rUUID/zones    controllers.cloud.AvailabilityZoneController.create(pUUID: java.util.UUID, rUUID: java.util.UUID)

# Customer Management API
GET     /api/customers/:cUUID       controllers.yb.CustomerController.index(cUUID: java.util.UUID)
PUT     /api/customers/:cUUID       controllers.yb.CustomerController.update(cUUID: java.util.UUID)

# Instance Management API
POST    /api/customers/:cUUID/instances controllers.yb.InstanceController.create(cUUID: java.util.UUID)
PUT     /api/customers/:cUUID/instances controllers.yb.InstanceController.update(cUUID: java.util.UUID)
GET     /api/customers/:cUUID/instances controllers.yb.InstanceController.list(cUUID: java.util.UUID)

# Task History API
GET    /api/customers/:cUUID/tasks  controllers.yb.CustomerTaskController.list(cUUID: java.util.UUID)

# Commissioner Specific Routes
POST    /commissioner/tasks         controllers.commissioner.TasksController.create()
GET     /commissioner/tasks/:tUUID  controllers.commissioner.TasksController.show(tUUID: java.util.UUID)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
