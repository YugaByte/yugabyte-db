# Copyright (c) YugaByte, Inc.
# Prometheus metrics query, and related params
---
cpu_usage_user:
  metric: "collectd_cpu_percent"
  function: "avg"
  filters:
    cpu: "user"
  layout:
    title: "CPU Usage (User)"
    xaxis:
      type: "date"
cpu_usage_system:
  metric: "collectd_cpu_percent"
  function: "avg"
  filters:
    cpu: "system"
  layout:
    title: "CPU Usage (System)"
    xaxis:
      type: "date"
cpu_usage:
  metric: "collectd_cpu_percent"
  function: "avg"
  filters:
    cpu: "user|system"
  group_by: "cpu"
  layout:
    title: "CPU Usage"
disk_iops:
  metric: "collectd_yb_system_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "iostat_write_count|iostat_read_count"
  group_by: "type"
  layout:
    title: "Disk IOPS"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "iostat_write_count": "Writes"
        "iostat_read_count": "Reads"
memory_usage:
  metric: "collectd_memory"
  function: "avg"
  filters:
    memory: "used|buffered|cached|free"
  group_by: "memory"
  layout:
    title: "Memory Usage"
    xaxis:
      type: "date"
network_bytes:
  metric: "collectd_yb_system_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "net_bytes_sent|net_bytes_recv"
  group_by: "type"
  layout:
    title: "Network Bytes / sec / host"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "net_bytes_sent": "TX"
        "net_bytes_recv": "RX"

network_packets:
  metric: '{__name__=~"node_network_(.*)_packets"}'
  function: "avg"
  group_by: "__name__"
  layout:
    title: "Network Packets / sec / host"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "node_network_receive_packets": "RX"
        "node_network_transmit_packets": "TX"

network_errors:
  metric: '{__name__=~"node_network_(.*)_errs"}'
  function: "avg"
  group_by: "__name__"
  layout:
    title: "Network Errors / sec / host"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "node_network_receive_errs": "RX"
        "node_network_transmit_errs": "TX"

system_load_over_time:
  metric: '{__name__=~"collectd_load_.+"}'
  function: "avg"
  group_by: "__name__"
  layout:
    title: "System Load Over Time"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "collectd_load_0": "Small"
        "collectd_load_1": "Medium"
        "collectd_load_2": "Large"

disk_bytes_per_second_per_node:
  metric: '{__name__=~"node_disk_bytes_.+"}'
  function: "avg"
  group_by: "__name__"
  layout:
    title: "Disk Bytes / Sec / Node"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "node_disk_bytes_read": "RX"
        "node_disk_bytes_written": "TX"

redis_ops_latency:
  metric: "collectd_yb_redis_counter_total"
  function: "avg"
  filters:
    type: "rpc_RedisServerService_get.avg|rpc_RedisServerService_set.avg|rpc_RedisServerService_echo.avg"
  group_by: "type"
  layout:
    title: "Redis Op Latency"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_RedisServerService_get.avg": "Get"
        "rpc_RedisServerService_set.avg": "Set"
        "rpc_RedisServerService_echo.avg": "Echo"
redis_rpcs_per_sec:
  metric: "collectd_yb_redis_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "rpc_RedisServerService_get.num|rpc_RedisServerService_set.num|rpc_RedisServerService_echo.num"
  group_by: "type"
  layout:
    title: "Redis RPCs / sec"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_RedisServerService_get.num": "Get"
        "rpc_RedisServerService_set.num": "Set"
        "rpc_RedisServerService_echo.num": "Echo"
tserver_ops_latency:
  metric: "collectd_yb_tserver_counter_total"
  function: "avg"
  filters:
    type: "rpc_TabletServerService_Scan.avg|rpc_TabletServerService_Write.avg|rpc_TabletServerService_Read.avg"
  group_by: "type"
  layout:
    title: "YugaByte Op Latency"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_TabletServerService_Scan.avg": "Scan"
        "rpc_TabletServerService_Write.avg": "Write"
        "rpc_TabletServerService_Read.avg": "Read"
tserver_rpcs_per_sec:
  metric: "collectd_yb_tserver_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "rpc_TabletServerService_Scan.num|rpc_TabletServerService_Write.num|rpc_TabletServerService_Read.num"
  group_by: "type"
  layout:
    title: "YugaByte RPCs / sec"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_TabletServerService_Scan.num": "Scan"
        "rpc_TabletServerService_Write.num": "Write"
        "rpc_TabletServerService_Read.num": "Read"
