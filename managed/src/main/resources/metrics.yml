# Copyright (c) YugaByte, Inc.
# Prometheus metrics query, and related params
---
cpu_usage_user:
  metric: "collectd_cpu_percent"
  function: "avg"
  filters:
    cpu: "user"
  layout:
    title: "CPU Usage (User)"
    xaxis:
      type: "date"
cpu_usage_system:
  metric: "collectd_cpu_percent"
  function: "avg"
  filters:
    cpu: "system"
  layout:
    title: "CPU Usage (System)"
    xaxis:
      type: "date"
cpu_usage:
  metric: "collectd_cpu_percent"
  function: "avg"
  filters:
    cpu: "user|system"
  group_by: "cpu"
  layout:
    title: "CPU Usage (pct)"
    xaxis:
      type: "date"
disk_iops:
  metric: "collectd_yb_system_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "iostat_write_count|iostat_read_count"
  group_by: "type"
  layout:
    title: "Disk IOPS / Node"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "iostat_write_count": "Writes"
        "iostat_read_count": "Reads"

disk_iops_by_universe:
  metric: "collectd_yb_system_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "iostat_write_count|iostat_read_count"
  group_by: "type, node_prefix, exported_instance"
  layout:
    title: "Disk IOPS / Node"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "iostat_write_count": "Writes"
        "iostat_read_count": "Reads"

memory_usage:
  metric: "collectd_memory"
  function: "avg"
  filters:
    memory: "used|buffered|cached|free"
  group_by: "memory"
  layout:
    title: "Memory Usage (bytes)"
    xaxis:
      type: "date"

network_bytes:
  metric: "collectd_yb_system_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "net_bytes_sent|net_bytes_recv"
  group_by: "type"
  layout:
    title: "Network Bytes / Sec / Node"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "net_bytes_sent": "TX"
        "net_bytes_recv": "RX"

network_packets:
  metric: "collectd_yb_system_counter_total"
  function: "rate|avg"
  range: "1m"
  operator: "/ 10"
  filters:
    type: "net_packets_sent|net_packets_recv"
  group_by: "type"
  layout:
    title: "Network Packets / Sec / Node"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "node_network_receive_packets": "RX"
        "node_network_transmit_packets": "TX"

network_errors:
  metric: "collectd_yb_system_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "net_errin|net_errout"
  group_by: "type"
  layout:
    title: "Network Errors / Sec / Node"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "net_errin": "RX"
        "net_errout": "TX"

system_load_over_time:
  metric: "multi-metric"
  filters:
    __name__: "collectd_load_.+"
  function: "avg"
  group_by: "__name__"
  layout:
    title: "System Load Over Time"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "collectd_load_0": "Small"
        "collectd_load_1": "Medium"
        "collectd_load_2": "Large"

disk_bytes_per_second_per_node:
  metric: "collectd_yb_system_counter_total"
  filters:
    type: "iostat_read_bytes|iostat_write_bytes"
  range: "1m"
  function: "rate|avg"
  group_by: "type"
  layout:
    title: "Disk Bytes / Sec / Node"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "iostat_read_bytes": "Read"
        "iostat_write_bytes": "Write"

redis_rpcs_per_sec:
  metric: "collectd_yb_redis_counter_total"
  function: "rate|sum"
  range: "1m"
  filters:
    type: "rpc_RedisServerService_get.num|rpc_RedisServerService_set.num|rpc_RedisServerService_echo.num"
  group_by: "type"
  layout:
    title: "Total Redis Ops / Sec"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_RedisServerService_get.num": "Get"
        "rpc_RedisServerService_set.num": "Set"
        "rpc_RedisServerService_echo.num": "Echo"

redis_ops_latency:
  metric: "collectd_yb_redis_counter_total"
  function: "avg"
  filters:
    type: "rpc_RedisServerService_get.avg|rpc_RedisServerService_set.avg|rpc_RedisServerService_echo.avg"
  group_by: "type"
  layout:
    title: "Redis Op Latency"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_RedisServerService_get.avg": "Get"
        "rpc_RedisServerService_set.avg": "Set"
        "rpc_RedisServerService_echo.avg": "Echo"
      ticksuffix: "&nbsp;\u00B5s"

redis_yb_latency:
  metric: "collectd_yb_redis_counter_total"
  function: "avg"
  filters:
    type: "rpc_write.avg|rpc_read.avg"
  group_by: "type"
  layout:
    title: "YBClient Latency"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_write.avg": "Write"
        "rpc_read.avg": "Read"
      ticksuffix: "&nbsp;\u00B5s"

# tserver metrics
tserver_ops_latency:
  metric: "collectd_yb_tserver_counter_total"
  function: "avg"
  filters:
    type: "rpc_TabletServerService_Scan.avg|rpc_TabletServerService_Write.avg|rpc_TabletServerService_Read.avg"
  group_by: "type"
  layout:
    title: "YugaByte Op Latency"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_TabletServerService_Scan.avg": "Scan"
        "rpc_TabletServerService_Write.avg": "Write"
        "rpc_TabletServerService_Read.avg": "Read"
      ticksuffix: "&nbsp;\u00B5s"

tserver_handler_latency:
  metric: "collectd_yb_tserver_counter_total"
  function: "avg"
  filters:
    type: "rpc_incoming_queue_time.avg|handler_latency_outbound_call_queue_time.avg|handler_latency_outbound_transfer.avg"
  group_by: "type"
  layout:
    title: "YugaByte Reactor Delays"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_incoming_queue_time.avg": "Incoming queue time"
        "handler_latency_outbound_call_queue_time.avg": "Outbound queue time"
        "handler_latency_outbound_transfer.avg": "Outbound transfer time"
      ticksuffix: "&nbsp;\u00B5s"

tserver_rpcs_per_sec:
  metric: "collectd_yb_tserver_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "rpc_TabletServerService_Scan.num|rpc_TabletServerService_Write.num|rpc_TabletServerService_Read.num"
  group_by: "type"
  layout:
    title: "YugaByte RPCs / Sec / Node"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_TabletServerService_Scan.num": "Scan"
        "rpc_TabletServerService_Write.num": "Write"
        "rpc_TabletServerService_Read.num": "Read"
tserver_threads:
  metric: "collectd_yb_tserver_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "threads_running|threads_started"
  group_by: "type"
  layout:
    title: "Threads"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "threads_running": "Running"
        "threads_started": "Started"
tserver_change_config:
  metric: "collectd_yb_tserver_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "rpc_ConsensusService_ChangeConfig.avg"
  group_by: "type"
  layout:
    title: "Change Config"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_ConsensusService_ChangeConfig.avg": "Change Config"
tserver_context_switches:
  metric: "collectd_yb_tserver_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "involuntary_context_switches|voluntary_context_switches"
  group_by: "type"
  layout:
    title: "Context Switches"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "involuntary_context_switches": "Involuntary"
        "voluntary_context_switches": "Voluntary"
tserver_spinlock_server:
  metric: "collectd_yb_tserver_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "spinlock_contention_time"
  group_by: "type"
  layout:
    title: "SpinLock Pct / Server"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "spinlock_contention_time": "SpinLock"
      ticksuffix: "&nbsp;%"
tserver_log_latency:
  metric: "collectd_yb_tserver_counter_total"
  function: "avg"
  filters:
    type: "log_sync_latency.avg|log_group_commit_latency.avg|log_append_latency.avg"
  group_by: "type"
  layout:
    title: "TServer Log Latency"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "log_sync_latency.avg": "Sync"
        "log_group_commit_latency.avg": "Commit"
        "log_append_latency.avg": "Append"
      ticksuffix: "&nbsp;\u00B5s"

tserver_log_bytes_written:
  metric: "collectd_yb_tserver_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "log_bytes_logged"
  group_by: "type"
  layout:
    title: "Log Bytes Written / Sec / TServer"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "log_bytes_logged": "Log Bytes Logged"
tserver_log_bytes_read:
  metric: "collectd_yb_tserver_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "log_reader_bytes_read"
  group_by: "type"
  layout:
    title: "Log Bytes Read / Sec / TServer"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "log_reader_bytes_read": "Log Bytes Read"
tserver_log_ops_second:
   metric: "collectd_yb_tserver_counter_total"
   function: "rate|avg"
   range: "1m"
   filters:
     type: "log_group_commit_latency.num|log_append_latency.num|log_sync_latency.num"
   group_by: "type"
   layout:
     title: "TServer Log Ops / Sec / Node"
     xaxis:
       type: "date"
     yaxis:
       alias:
         "log_group_commit_latency.num": "Commit"
         "log_append_latency.num": "Append"
         "log_sync_latency.num": "Sync"
       ticksuffix: "&nbsp;ops"
tserver_tc_malloc_stats:
  metric: "collectd_yb_tserver_counter_total"
  function: "avg"
  filters:
    type: "tcmalloc_current_total_thread_cache_bytes|tcmalloc_max_total_thread_cache_bytes|
           tcmalloc_pageheap_free_bytes|tcmalloc_pageheap_unmapped_bytes"
  group_by: "type"
  layout:
    title: "TServer TCMalloc Stats"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "tcmalloc_current_total_thread_cache_bytes": "Reserved"
        "tcmalloc_max_total_thread_cache_bytes": "Usage"
        "tcmalloc_pageheap_free_bytes": "Free"
        "tcmalloc_pageheap_unmapped_bytes": "Small"

tserver_log_stats:
  metric: "collectd_yb_tserver_counter_total"
  function: "avg"
  filters:
    type: "log_reader_bytes_read|log_cache_size"
  group_by: "type"
  layout:
    title: "Log Stats"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "log_reader_bytes_read": "Log Bytes Read"
        "log_cache_size": "Log Cache Size"
      ticksuffix: "&nbsp;KiB"

tserver_cache_reader_num_ops:
  metric: "collectd_yb_tserver_counter_total"
  function: "avg"
  filters:
    type: "log_cache_num_ops"
  group_by: "type"
  layout:
    title: "Log Cache Num Ops"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "log_cache_num_ops": "Num Ops"

lsm_rocksdb_num_seek_or_next:
  metric: "collectd_yb_tserver_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "rocksdb.number.db.seek|rocksdb.number.db.seek.found|rocksdb.number.db.next|rocksdb.number.db.next.found"
  group_by: "type"
  layout:
    title: "LSM-DB Seek/Next Num Ops"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rocksdb.number.db.seek": "Seek"
        "rocksdb.number.db.seek.found": "Seek Found"
        "rocksdb.number.db.next": "Next"
        "rocksdb.number.db.next.found": "Next Found"

lsm_rocksdb_latencies:
  metric: "collectd_yb_tserver_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "rocksdb.db.get.micros.avg|rocksdb.db.write.micros.avg|rocksdb.db.seek.micros.avg"
  group_by: "type"
  layout:
    title: "LSM-DB Get / Write / Seek latencies (us)"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rocksdb.db.get.micros.avg": "Get"
        "rocksdb.db.write.micros.avg": "Write"
        "rocksdb.db.seek.micros.avg": "Seek"

lsm_rocksdb_block_cache:
  metric: "collectd_yb_tserver_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "rocksdb.block.cache.hit|rocksdb.block.cache.miss|rocksdb.block.cache.add"
  group_by: "type"
  layout:
    title: "Cache Hit/Miss/Add"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rocksdb.block.cache.hit": "Hit"
        "rocksdb.block.cache.miss": "Miss"
        "rocksdb.block.cache.add": "Add"

lsm_rocksdb_flush_size:
  metric: "collectd_yb_tserver_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "rocksdb.flush.write.bytes"
  group_by: "type"
  layout:
    title: "Flush write (bytes)"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rocksdb.flush.write.bytes": "Flush"

lsm_rocksdb_compaction:
  metric: "collectd_yb_tserver_counter_total"
  function: "rate|avg"
  range: "1m"
  filters:
    type: "rocksdb.compact.read.bytes|rocksdb.compact.write.bytes"
  group_by: "type"
  layout:
    title: "Compaction (bytes)"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rocksdb.compact.read.bytes": "Bytes Read"
        "rocksdb.compact.write.bytes": "Bytes Written"

#Cassandra Metrics
cql_server_rpc_per_second:
  metric: "collectd_yb_cql_counter_total"
  function: "rate|sum"
  range: "1m"
  filters:
    type: "rpc_SQLProcessor_SelectStmt.num|rpc_SQLProcessor_InsertStmt.num|rpc_SQLProcessor_UpdateStmt.num|rpc_SQLProcessor_DeleteStmt.num|rpc_SQLProcessor_OtherStmts.num"
  group_by: "type"
  layout:
    title: "Total CQL Ops / Sec"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_SQLProcessor_SelectStmt.num": "Select"
        "rpc_SQLProcessor_InsertStmt.num": "Insert"
        "rpc_SQLProcessor_UpdateStmt.num": "Update"
        "rpc_SQLProcessor_DeleteStmt.num": "Delete"
        "rpc_SQLProcessor_OtherStmts.num": "Other"

cql_sql_latency:
  metric: "collectd_yb_cql_counter_total"
  function: "avg"
  filters:
    type: "rpc_SQLProcessor_SelectStmt.avg|rpc_SQLProcessor_InsertStmt.avg|rpc_SQLProcessor_UpdateStmt.avg|rpc_SQLProcessor_DeleteStmt.avg|rpc_SQLProcessor_OtherStmts.avg"
  group_by: "type"
  layout:
    title: "CQL Op Execute Latencies"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_SQLProcessor_SelectStmt.avg": "Select"
        "rpc_SQLProcessor_InsertStmt.avg": "Insert"
        "rpc_SQLProcessor_UpdateStmt.avg": "Update"
        "rpc_SQLProcessor_DeleteStmt.avg": "Delete"
        "rpc_SQLProcessor_OtherStmts.avg": "Others"
      ticksuffix: "&nbsp;\u00B5s"

cql_sql_latency_breakdown:
  metric: "collectd_yb_cql_counter_total"
  function: "avg"
  filters:
    type: "rpc_CQLServerService_ProcessRequest.avg|rpc_SQLProcessor_ParseRequest.avg|rpc_SQLProcessor_AnalyseRequest.avg|rpc_SQLProcessor_ExecuteRequest.avg"
  group_by: "type"
  layout:
    title: "CQL Latency Breakdown"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_CQLServerService_ProcessRequest.avg": "Total"
        "rpc_SQLProcessor_ParseRequest.avg": "Parse"
        "rpc_SQLProcessor_AnalyseRequest.avg": "Analyze"
        "rpc_SQLProcessor_ExecuteRequest.avg": "Execute"
      ticksuffix: "&nbsp;\u00B5s"

cql_yb_latency:
  metric: "collectd_yb_cql_counter_total"
  function: "avg"
  filters:
    type: "rpc_write.avg|rpc_read.avg"
  group_by: "type"
  layout:
    title: "YBClient Latency"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_read.avg": "Read"
        "rpc_write.avg": "Write"
      ticksuffix: "&nbsp;\u00B5s"

cql_reactor_latency:
  metric: "collectd_yb_cql_counter_total"
  function: "avg"
  filters:
    type: "rpc_incoming_queue_time.avg|handler_latency_outbound_transfer.avg|handler_latency_outbound_call_queue_time.avg"
  group_by: "type"
  layout:
    title: "YBClient Reactor Delays"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_incoming_queue_time.avg": "Incoming Queue"
        "handler_latency_outbound_transfer.avg": "Outbound transfer time"
        "handler_latency_outbound_call_queue_time.avg": "Outbound queue time"
      ticksuffix: "&nbsp;\u00B5s"

response_sizes:
  metric: "collectd_yb_cql_counter_total"
  function: "avg"
  filters:
    type: "rpc_SQLProcessor_ResponseSize.avg"
  group_by: "type"
  layout:
    title: "Response Size (bytes)"
    xaxis:
      type: "date"
    yaxis:
      alias:
        "rpc_SQLProcessor_ResponseSize.avg": "Response Size"
