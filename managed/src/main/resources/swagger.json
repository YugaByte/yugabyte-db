{
  "swagger" : "2.0",
  "info" : {
    "description" : "ALPHA - NOT FOR EXTERNAL USE",
    "version" : "v1",
    "title" : "Yugabyte Platform APIs",
    "termsOfService" : "TODO(chirag)",
    "contact" : {
      "name" : "https://docs.yugabyte.com"
    },
    "license" : {
      "name" : "Polyform Free Trial License 1.0.0",
      "url" : "https://github.com/yugabyte/yugabyte-db/blob/master/licenses/POLYFORM-FREE-TRIAL-LICENSE-1.0.0.txt"
    }
  },
  "host" : "localhost",
  "basePath" : "/",
  "tags" : [ {
    "name" : "Universe Actions"
  }, {
    "name" : "Provider"
  }, {
    "name" : "Customer"
  }, {
    "name" : "Users"
  }, {
    "name" : "RuntimeConfig"
  }, {
    "name" : "Region"
  }, {
    "name" : "Customer Task"
  }, {
    "name" : "Provider1"
  }, {
    "name" : "Universe"
  }, {
    "name" : "AvailabilityZone"
  }, {
    "name" : "UniverseInfo"
  }, {
    "name" : "Universe YB Database"
  } ],
  "schemes" : [ "http", "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/setup_universe_2dc" : {
      "put" : {
        "tags" : [ "Universe Actions" ],
        "summary" : "resetVersion",
        "description" : "",
        "operationId" : "resetVersion",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/set_key" : {
      "post" : {
        "tags" : [ "Universe Actions" ],
        "summary" : "setUniverseKey",
        "description" : "",
        "operationId" : "setUniverseKey",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResp"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/resume" : {
      "post" : {
        "tags" : [ "Universe Actions" ],
        "summary" : "Resume the universe",
        "description" : "",
        "operationId" : "resume",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/pause" : {
      "post" : {
        "tags" : [ "Universe Actions" ],
        "summary" : "Pause the universe",
        "description" : "",
        "operationId" : "pause",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/mark_helm3_compatible" : {
      "put" : {
        "tags" : [ "Universe Actions" ],
        "summary" : "Set the universe as helm3 compatible",
        "description" : "",
        "operationId" : "setHelm3Compatible",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/update_backup_state" : {
      "put" : {
        "tags" : [ "Universe Actions" ],
        "summary" : "Set backup Flag for a universe",
        "description" : "",
        "operationId" : "setBackupFlag",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "markActive",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/config_alerts" : {
      "post" : {
        "tags" : [ "Universe Actions" ],
        "summary" : "Configure Alerts for a universe",
        "description" : "",
        "operationId" : "configureAlerts",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/toggle_tls" : {
      "post" : {
        "tags" : [ "Universe Actions" ],
        "summary" : "API that toggles TLS state of the universe.",
        "description" : "Can enable/disable node to node and client to node encryption. Supports rolling and non-rolling upgrade of the universe.",
        "operationId" : "toggleTls",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResp"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/edit" : {
      "put" : {
        "tags" : [ "Provider" ],
        "summary" : "editProvider",
        "description" : "",
        "operationId" : "edit",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "EditProviderFormData",
          "description" : "edit provider form data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EditProviderRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Provider"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers" : {
      "get" : {
        "tags" : [ "Provider1" ],
        "summary" : "listProvider",
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Provider"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Provider" ],
        "operationId" : "create",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/initialize" : {
      "get" : {
        "tags" : [ "Provider" ],
        "summary" : "refreshPricing",
        "description" : "Refresh Provider pricing info",
        "operationId" : "initialize",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/bootstrap" : {
      "post" : {
        "tags" : [ "Provider" ],
        "operationId" : "bootstrap",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/kubernetes" : {
      "post" : {
        "tags" : [ "Provider" ],
        "operationId" : "createKubernetes",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/suggested_kubernetes_config" : {
      "get" : {
        "tags" : [ "Provider" ],
        "summary" : "getSuggestedKubernetesConfigs",
        "description" : " Performs discovery of region, zones, pull secret, storageClass when running inside a Kubernetes cluster. Returns the discovered information as a JSON, which is similar to the one which is passed to the createKubernetes method.",
        "operationId" : "getSuggestedKubernetesConfigs",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/KubernetesProviderFormData"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/import" : {
      "post" : {
        "summary" : "import",
        "description" : "",
        "operationId" : "importUniverse",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/features" : {
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Upsert features of customer by UUID",
        "description" : "",
        "operationId" : "upsertFeatures",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Feature",
          "description" : "Feature to be upserted",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/FeatureUpdateFormData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get customer by UUID",
        "description" : "",
        "operationId" : "index",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Customer Detail"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "Update customer by UUID",
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Customer",
          "description" : "Customer data to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Alerts"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Customer"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customer" ],
        "summary" : "Delete customer by UUID",
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/metrics" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "Add metrics of customer by UUID",
        "description" : "",
        "operationId" : "metrics",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Metrics",
          "description" : "Metrics to be added",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Metrics"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/host_info" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "Get host info by customer UUID",
        "description" : "",
        "operationId" : "getHostInfo",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers_data" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "List customer",
        "description" : "",
        "operationId" : "listWithData",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Customer"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/users/{uUUID}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "User detail by UUID",
        "description" : "",
        "operationId" : "index",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Users"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "Change role of user by UUID",
        "description" : "",
        "operationId" : "changeRole",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "role",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Delete customer",
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "List of Users",
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Users"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Create User",
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "User",
          "description" : "Users data to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User Register"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Users"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/users/{uUUID}/change_password" : {
      "put" : {
        "tags" : [ "Users" ],
        "summary" : "Chnage password of User",
        "description" : "",
        "operationId" : "changePassword",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "Users",
          "description" : "Users data to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/User Register"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/runtime_config/{scope}/key/{key}" : {
      "get" : {
        "tags" : [ "RuntimeConfig" ],
        "summary" : "getKey",
        "description" : "",
        "operationId" : "getKey",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "scope",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "RuntimeConfig" ],
        "summary" : "setKey",
        "description" : "",
        "operationId" : "setKey",
        "consumes" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "scope",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "newValue",
          "description" : "new value for config key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "RuntimeConfig" ],
        "summary" : "deleteKey",
        "description" : "",
        "operationId" : "deleteKey",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "scope",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/runtime_config/mutable_keys" : {
      "get" : {
        "tags" : [ "RuntimeConfig" ],
        "summary" : "listKeys",
        "description" : "List all the mutable runtime config keys",
        "operationId" : "listKeys",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/runtime_config/{scope}" : {
      "get" : {
        "tags" : [ "RuntimeConfig" ],
        "summary" : "listScopes",
        "description" : "Lists all (including empty scopes) runtime config scopes for current customer. List includes the Global scope that spans multiple customers, scope for customer specific overrides for current customer and one scope each for each universe and provider.",
        "operationId" : "getConfig",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "scope",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "includeInherited",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RuntimeConfigFormData"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/runtime_config/scopes" : {
      "get" : {
        "tags" : [ "RuntimeConfig" ],
        "summary" : "listScopes",
        "description" : "Lists all (including empty scopes) runtime config scopes for current customer. List includes the Global scope that spans multiple customers, scope for customer specific overrides for current customer and one scope each for each universe and provider.",
        "operationId" : "listScopes",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RuntimeConfigFormData"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/regions/{rUUID}" : {
      "delete" : {
        "tags" : [ "Region" ],
        "summary" : "delete",
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/regions" : {
      "get" : {
        "tags" : [ "Region" ],
        "summary" : "list Regions for a specific provider",
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Region"
              }
            }
          },
          "500" : {
            "description" : "If there was a server or database issue when listing the regions",
            "schema" : {
              "$ref" : "#/definitions/Generic error response from Yugawware Platform API"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Region" ],
        "summary" : "create new region",
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "region",
          "description" : "region form data for new region to be created",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RegionFormData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Region"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/regions" : {
      "get" : {
        "tags" : [ "Region" ],
        "summary" : "list all Regions across all providers",
        "description" : "",
        "operationId" : "listAllRegions",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Region"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/tasks" : {
      "get" : {
        "tags" : [ "Customer Task" ],
        "summary" : "List task",
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/Customer Task Data"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/tasks/{tUUID}" : {
      "get" : {
        "tags" : [ "Customer Task" ],
        "summary" : "Status of task",
        "description" : "",
        "operationId" : "taskStatus",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Customer Task" ],
        "summary" : "Retry task",
        "description" : "",
        "operationId" : "retryTask",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResp"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/tasks" : {
      "get" : {
        "tags" : [ "Customer Task" ],
        "summary" : "Universe task",
        "description" : "",
        "operationId" : "universeTasks",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/Customer Task Data"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/tasks/{tUUID}/failed" : {
      "get" : {
        "tags" : [ "Customer Task" ],
        "summary" : "Get failed sub task",
        "description" : "",
        "operationId" : "failedSubtasks",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers1" : {
      "post" : {
        "tags" : [ "Provider1" ],
        "summary" : "createProvider",
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "CreateProviderRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Provider"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/register" : {
      "post" : {
        "operationId" : "register",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/logout" : {
      "get" : {
        "operationId" : "logout",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/universes/{uniUUID}/proxy/{proxyUrl}" : {
      "get" : {
        "operationId" : "proxyRequest",
        "parameters" : [ {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "proxyUrl",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/login" : {
      "post" : {
        "summary" : "login",
        "description" : "",
        "operationId" : "login",
        "parameters" : [ {
          "in" : "body",
          "name" : "loginFormData",
          "description" : "login form data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomerLoginFormData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "/api/v1/insecure_login" : {
      "get" : {
        "summary" : "insecureLogin",
        "description" : "",
        "operationId" : "insecure_login",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "/api/v1/platform_config" : {
      "get" : {
        "operationId" : "getPlatformConfig",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/third_party_login" : {
      "get" : {
        "operationId" : "thirdPartyLogin",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/security" : {
      "put" : {
        "operationId" : "set_security",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/api_token" : {
      "put" : {
        "summary" : "apiToken",
        "description" : "",
        "operationId" : "api_token",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "/api/v1/customer_count" : {
      "get" : {
        "operationId" : "customerCount",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/app_version" : {
      "get" : {
        "operationId" : "appVersion",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/logs/{maxLines}" : {
      "get" : {
        "operationId" : "getLogs",
        "parameters" : [ {
          "name" : "maxLines",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/ui_theme" : {
      "get" : {
        "operationId" : "getUITheme",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/universe_configure" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "configure the universe parameters",
        "description" : "This API builds the new universe definition task parameters by merging the input UserIntent with the current taskParams and returns the resulting task parameters in a serialized form",
        "operationId" : "configure",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseDefinitionTaskParams"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/upgrade" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "Upgrade  the universe",
        "description" : "",
        "operationId" : "upgrade",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "upgrade_params",
          "description" : "upgrade params",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpgradeParams"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}" : {
      "get" : {
        "tags" : [ "Universe" ],
        "summary" : "getUniverse",
        "description" : "",
        "operationId" : "index",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResp"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Universe" ],
        "summary" : "updateUniverse",
        "description" : "",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "univ_def",
          "description" : "univ definition",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UniverseDefinitionTaskParams"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResp"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Universe" ],
        "summary" : "Destroy the universe",
        "description" : "",
        "operationId" : "destroy",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "isForceDelete",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "isDeleteBackups",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/find" : {
      "get" : {
        "tags" : [ "Universe" ],
        "operationId" : "find",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ],
        "deprecated" : true
      }
    },
    "/api/v1/customers/{cUUID}/universes" : {
      "get" : {
        "tags" : [ "Universe" ],
        "summary" : "List Universes",
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "null"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UniverseResp"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "Create a YugaByte Universe",
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "univ_def",
          "description" : "univ definition",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UniverseDefinitionTaskParams"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResp"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/disk_update" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "updateDiskSize",
        "description" : "",
        "operationId" : "updateDiskSize",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "univ_def",
          "description" : "univ definition",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DiskIncreaseFormData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWTask"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/cluster" : {
      "post" : {
        "tags" : [ "Universe" ],
        "summary" : "clusterCreate",
        "description" : "",
        "operationId" : "clusterCreate",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "univ_def",
          "description" : "univ definition",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UniverseDefinitionTaskParams"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResp"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/cluster/{clustUUID}" : {
      "delete" : {
        "tags" : [ "Universe" ],
        "summary" : "clusterDelete",
        "description" : "",
        "operationId" : "clusterDelete",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "clustUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "isForceDelete",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResp"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/certificates/{name}" : {
      "get" : {
        "operationId" : "get",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/certificates/{rUUID}" : {
      "post" : {
        "summary" : "TODO",
        "description" : "",
        "operationId" : "getClientCert",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/certificates" : {
      "get" : {
        "operationId" : "list",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "summary" : "upload",
        "description" : "",
        "operationId" : "upload",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/certificates/{rUUID}/download" : {
      "get" : {
        "operationId" : "getRootCert",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/certificates/{rUUID}/update_empty_cert" : {
      "post" : {
        "summary" : "update empty certs",
        "description" : "",
        "operationId" : "updateEmptyCustomCert",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CertificateInfo"
            }
          }
        }
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/regions/{rUUID}/zones/{azUUID}" : {
      "delete" : {
        "tags" : [ "AvailabilityZone" ],
        "summary" : "deleteAZ",
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "azUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/providers/{pUUID}/regions/{rUUID}/zones" : {
      "get" : {
        "tags" : [ "AvailabilityZone" ],
        "summary" : "listAZ",
        "description" : "",
        "operationId" : "list",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AvailabilityZone"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "AvailabilityZone" ],
        "summary" : "createAZ",
        "description" : "",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "pUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "rUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "azFormData",
          "description" : "az form data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AvailabilityZoneFormData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/AvailabilityZone"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universe_resources" : {
      "post" : {
        "tags" : [ "UniverseInfo" ],
        "summary" : "Api to get the resource estimate for a universe",
        "description" : "Expects UniverseDefinitionTaskParams in request body and calculates the resource estimate for NodeDetailsSet in that.",
        "operationId" : "getUniverseResources",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResource"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/status" : {
      "get" : {
        "tags" : [ "UniverseInfo" ],
        "summary" : "Status of the Universe",
        "description" : "This will return a Map of node name to its status in json format",
        "operationId" : "universeStatus",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/health_check" : {
      "get" : {
        "tags" : [ "UniverseInfo" ],
        "summary" : "health Check",
        "description" : "",
        "operationId" : "healthCheck",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/cost" : {
      "get" : {
        "tags" : [ "UniverseInfo" ],
        "summary" : "list universe cost for all universes",
        "description" : "",
        "operationId" : "universeListCost",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UniverseResource"
              }
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/cost" : {
      "get" : {
        "tags" : [ "UniverseInfo" ],
        "summary" : "universeCost",
        "description" : "",
        "operationId" : "universeCost",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UniverseResource"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/leader" : {
      "get" : {
        "tags" : [ "UniverseInfo" ],
        "summary" : "getMasterLeaderIP",
        "description" : "",
        "operationId" : "getMasterLeaderIP",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/live_queries" : {
      "get" : {
        "tags" : [ "UniverseInfo" ],
        "summary" : "getLiveQueries",
        "description" : "",
        "operationId" : "getLiveQueries",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/slow_queries" : {
      "get" : {
        "tags" : [ "UniverseInfo" ],
        "summary" : "getSlowQueries",
        "description" : "",
        "operationId" : "getSlowQueries",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "UniverseInfo" ],
        "summary" : "resetSlowQueries",
        "description" : "",
        "operationId" : "resetSlowQueries",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/{nodeName}/download_logs" : {
      "get" : {
        "tags" : [ "UniverseInfo" ],
        "operationId" : "downloadNodeLogs",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "nodeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/run_query" : {
      "post" : {
        "tags" : [ "Universe YB Database" ],
        "summary" : "Run YSQL query against this universe",
        "description" : "Only valid when platform is running in mode is `OSS`",
        "operationId" : "runQuery",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/run_in_shell" : {
      "post" : {
        "tags" : [ "Universe YB Database" ],
        "summary" : "run command in shell",
        "description" : "This operation is no longer supported due to security reasons",
        "operationId" : "runInShell",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Generic error response from Yugawware Platform API"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/update_db_credentials" : {
      "post" : {
        "tags" : [ "Universe YB Database" ],
        "summary" : "setDatabaseCredentials",
        "description" : "",
        "operationId" : "setDatabaseCredentials",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    },
    "/api/v1/customers/{cUUID}/universes/{uniUUID}/create_db_credentials" : {
      "post" : {
        "tags" : [ "Universe YB Database" ],
        "summary" : "createUserInDB",
        "description" : "",
        "operationId" : "createUserInDB",
        "parameters" : [ {
          "name" : "cUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "uniUUID",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/YWSuccess"
            }
          }
        },
        "security" : [ {
          "apiKeyAuth" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "apiKeyAuth" : {
      "description" : "Api key passed as header",
      "type" : "apiKey",
      "name" : "X-AUTH-YW-API-TOKEN",
      "in" : "header"
    }
  },
  "definitions" : {
    "YWSuccess" : {
      "type" : "object",
      "properties" : {
        "success" : {
          "type" : "boolean",
          "description" : "Is API succeeded",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "description" : "API response mssage.",
          "readOnly" : true
        }
      }
    },
    "UniverseResp" : {
      "type" : "object",
      "properties" : {
        "universeUUID" : {
          "type" : "string",
          "description" : "Universe UUID"
        },
        "name" : {
          "type" : "string",
          "description" : "Universe name"
        },
        "creationDate" : {
          "type" : "string",
          "description" : "Creation time"
        },
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Version"
        },
        "dnsName" : {
          "type" : "string",
          "description" : "DNS name"
        },
        "universeDetails" : {
          "type" : "object",
          "description" : "Universe Details",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "universeConfig" : {
          "type" : "object",
          "description" : "Universe config",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "taskUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Task UUID"
        },
        "sampleAppCommandTxt" : {
          "type" : "string",
          "description" : "Sample command"
        },
        "pricePerHour" : {
          "type" : "number",
          "format" : "double",
          "description" : "Price"
        }
      },
      "description" : "Universe Resp"
    },
    "YWTask" : {
      "type" : "object",
      "properties" : {
        "taskUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Task UUID",
          "readOnly" : true
        },
        "resourceUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "UUID of the resource being modified  by the task",
          "readOnly" : true
        }
      }
    },
    "AvailabilityZone" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "AZ uuid",
          "readOnly" : true
        },
        "code" : {
          "type" : "string",
          "example" : "AWS",
          "description" : "AZ code"
        },
        "name" : {
          "type" : "string",
          "example" : "south-east-1",
          "description" : "AZ name"
        },
        "active" : {
          "type" : "boolean",
          "description" : "AZ is active or not",
          "readOnly" : true
        },
        "subnet" : {
          "type" : "string",
          "example" : "subnet id",
          "description" : "AZ Subnet"
        },
        "kubeconfigPath" : {
          "type" : "string",
          "description" : "Kubernetes Config path",
          "readOnly" : true
        }
      },
      "description" : "Availability Zone of regions."
    },
    "Provider" : {
      "type" : "object",
      "required" : [ "hostedZoneId", "hostedZoneName", "regions" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Provide uuid",
          "readOnly" : true
        },
        "code" : {
          "type" : "string",
          "description" : "Cloud Provider code"
        },
        "name" : {
          "type" : "string",
          "description" : "Cloud Provider code"
        },
        "active" : {
          "type" : "boolean",
          "description" : "Cloud Provider code",
          "readOnly" : true
        },
        "customerUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Cloud Provider code",
          "readOnly" : true
        },
        "regions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Region"
          }
        },
        "keyPairName" : {
          "type" : "string",
          "description" : "Transient property - only present in mutate API request"
        },
        "sshPrivateKeyContent" : {
          "type" : "string",
          "description" : "Transient property - only present in mutate API request"
        },
        "sshUser" : {
          "type" : "string",
          "description" : "Transient property - only present in mutate API request"
        },
        "airGapInstall" : {
          "type" : "boolean",
          "description" : "Transient property - only present in mutate API request"
        },
        "sshPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Transient property - only present in mutate API request"
        },
        "hostVpcId" : {
          "type" : "string",
          "description" : "Transient property - only present in mutate API request"
        },
        "hostVpcRegion" : {
          "type" : "string",
          "description" : "Transient property - only present in mutate API request"
        },
        "customHostCidrs" : {
          "type" : "array",
          "description" : "Transient property - only present in mutate API request",
          "items" : {
            "type" : "string"
          }
        },
        "destVpcId" : {
          "type" : "string",
          "description" : "Transient property - only present in mutate API request"
        },
        "hostedZoneName" : {
          "type" : "string"
        },
        "hostedZoneId" : {
          "type" : "string"
        },
        "config" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "Region" : {
      "type" : "object",
      "required" : [ "securityGroupId", "vnetName", "zones" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Region uuid",
          "readOnly" : true
        },
        "code" : {
          "type" : "string",
          "example" : "us-west-2",
          "description" : "Cloud provider region code",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "example" : "TODO",
          "description" : "Cloud provider region name"
        },
        "ybImage" : {
          "type" : "string",
          "example" : "TODO",
          "description" : "The AMI to be used in this region."
        },
        "longitude" : {
          "type" : "number",
          "format" : "double",
          "example" : -120.01,
          "description" : "Longitude of this region",
          "readOnly" : true
        },
        "latitude" : {
          "type" : "number",
          "format" : "double",
          "example" : 37.22,
          "description" : "Latitude of this region",
          "readOnly" : true
        },
        "zones" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AvailabilityZone"
          }
        },
        "securityGroupId" : {
          "type" : "string"
        },
        "vnetName" : {
          "type" : "string"
        },
        "config" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "description" : "Region within a given provider. Typically this will map to a single cloud provider region"
    },
    "EditProviderRequest" : {
      "type" : "object",
      "required" : [ "config", "hostedZoneId" ],
      "properties" : {
        "hostedZoneId" : {
          "type" : "string"
        },
        "config" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "KubernetesProviderFormData" : {
      "type" : "object",
      "required" : [ "code", "config", "name", "region", "regionList" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "enum" : [ "unknown", "aws", "gcp", "azu", "docker", "onprem", "kubernetes", "local", "other" ]
        },
        "name" : {
          "type" : "string"
        },
        "config" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "region" : {
          "type" : "string"
        },
        "regionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RegionData"
          }
        }
      }
    },
    "RegionData" : {
      "type" : "object",
      "required" : [ "code", "config", "latitude", "longitude", "name", "zoneList" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "number",
          "format" : "double"
        },
        "longitude" : {
          "type" : "number",
          "format" : "double"
        },
        "zoneList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ZoneData"
          }
        },
        "config" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ZoneData" : {
      "type" : "object",
      "required" : [ "code", "config", "name" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "config" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "FeatureUpdateFormData" : {
      "type" : "object",
      "required" : [ "features" ],
      "properties" : {
        "features" : {
          "$ref" : "#/definitions/JsonNode"
        }
      }
    },
    "JsonNode" : {
      "type" : "object",
      "required" : [ "array", "bigDecimal", "bigInteger", "binary", "boolean", "containerNode", "double", "float", "floatingPointNumber", "int", "integralNumber", "long", "missingNode", "nodeType", "null", "number", "object", "pojo", "short", "textual", "valueNode" ],
      "properties" : {
        "object" : {
          "type" : "boolean"
        },
        "nodeType" : {
          "type" : "string",
          "enum" : [ "ARRAY", "BINARY", "BOOLEAN", "MISSING", "NULL", "NUMBER", "OBJECT", "POJO", "STRING" ]
        },
        "valueNode" : {
          "type" : "boolean"
        },
        "containerNode" : {
          "type" : "boolean"
        },
        "missingNode" : {
          "type" : "boolean"
        },
        "pojo" : {
          "type" : "boolean"
        },
        "number" : {
          "type" : "boolean"
        },
        "integralNumber" : {
          "type" : "boolean"
        },
        "floatingPointNumber" : {
          "type" : "boolean"
        },
        "short" : {
          "type" : "boolean"
        },
        "int" : {
          "type" : "boolean"
        },
        "long" : {
          "type" : "boolean"
        },
        "double" : {
          "type" : "boolean"
        },
        "bigDecimal" : {
          "type" : "boolean"
        },
        "bigInteger" : {
          "type" : "boolean"
        },
        "textual" : {
          "type" : "boolean"
        },
        "boolean" : {
          "type" : "boolean"
        },
        "binary" : {
          "type" : "boolean"
        },
        "array" : {
          "type" : "boolean"
        },
        "null" : {
          "type" : "boolean"
        },
        "float" : {
          "type" : "boolean"
        }
      }
    },
    "Alert Detail" : {
      "type" : "object",
      "properties" : {
        "alertingEmail" : {
          "type" : "string",
          "example" : "test@gmail.com",
          "description" : "Alert email id"
        },
        "sendAlertsToYb" : {
          "type" : "boolean",
          "description" : "Is alert has sent to YB"
        },
        "checkIntervalMs" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Alert interval"
        },
        "statusUpdateIntervalMs" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Status update of alert interval"
        },
        "reportOnlyErrors" : {
          "type" : "boolean",
          "description" : "Is alert is just for error"
        },
        "reportBackupFailures" : {
          "type" : "boolean",
          "description" : "Is alert needed for backup failure"
        },
        "enableClockSkew" : {
          "type" : "boolean",
          "description" : "Is Clock skew is enabled"
        }
      },
      "description" : "Alerts associated with customers"
    },
    "Customer Detail" : {
      "type" : "object",
      "required" : [ "code", "name" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "description" : "User uuid",
          "readOnly" : true
        },
        "code" : {
          "type" : "string",
          "example" : "admin",
          "description" : "Customer code"
        },
        "name" : {
          "type" : "string",
          "example" : "sridhar",
          "description" : "Name of customer"
        },
        "creationDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2021-06-17 15:00:05",
          "description" : "Creation time",
          "readOnly" : true
        },
        "features" : {
          "description" : "Features",
          "readOnly" : true,
          "$ref" : "#/definitions/JsonNode"
        },
        "universeUUIDs" : {
          "type" : "array",
          "example" : "[\"c3595ca7-68a3-47f0-b1b2-1725886d5ed5\", \"9e0bb733-556c-4935-83dd-6b742a2c32e6\"]",
          "description" : "Associated Universe Id's",
          "readOnly" : true,
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "customerId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Customer id",
          "readOnly" : true
        },
        "alertingData" : {
          "description" : "Alerts",
          "readOnly" : true,
          "$ref" : "#/definitions/Alert Detail"
        },
        "smtpData" : {
          "description" : "SMTP",
          "readOnly" : true,
          "$ref" : "#/definitions/Smtp Data"
        },
        "callhomeLevel" : {
          "type" : "string",
          "example" : "MEDIUM",
          "description" : "Call home level",
          "readOnly" : true
        }
      },
      "description" : "Customers features and Universe UUID."
    },
    "Smtp Data" : {
      "type" : "object",
      "properties" : {
        "smtpServer" : {
          "type" : "string",
          "example" : "smtp.gmail.com",
          "description" : "SMTP server"
        },
        "smtpPort" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 465,
          "description" : "SMTP port number"
        },
        "emailFrom" : {
          "type" : "string",
          "example" : "test@gmail.com",
          "description" : "SMTP email id"
        },
        "smtpUsername" : {
          "type" : "string",
          "example" : "testsmtp",
          "description" : "SMTP email username"
        },
        "smtpPassword" : {
          "type" : "string",
          "example" : "XurenRknsc",
          "description" : "SMTP password"
        },
        "useSSL" : {
          "type" : "boolean",
          "example" : true,
          "description" : "Use SMTP SSL"
        },
        "useTLS" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Use SMTP TLS"
        }
      },
      "description" : "Customers features and Universe UUID."
    },
    "Customer" : {
      "type" : "object",
      "required" : [ "code", "name" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Customer uuid",
          "readOnly" : true
        },
        "code" : {
          "type" : "string",
          "example" : "admin",
          "description" : "Customer code"
        },
        "name" : {
          "type" : "string",
          "example" : "sridhar",
          "description" : "Name of customer"
        },
        "creationDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2021-06-17 15:00:05",
          "description" : "Creation time",
          "readOnly" : true
        },
        "features" : {
          "description" : "Features",
          "readOnly" : true,
          "$ref" : "#/definitions/JsonNode"
        },
        "universeUUIDs" : {
          "type" : "array",
          "example" : "[\"c3595ca7-68a3-47f0-b1b2-1725886d5ed5\", \"9e0bb733-556c-4935-83dd-6b742a2c32e6\"]",
          "description" : "Universe UUIDs",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "customerId" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1,
          "description" : "Customer id",
          "readOnly" : true
        }
      },
      "description" : "Customers features and Universe UUID."
    },
    "Alerts" : {
      "type" : "object",
      "required" : [ "alertingData", "callhomeLevel", "smtpData" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Alert code"
        },
        "email" : {
          "type" : "string",
          "example" : "test@gmail.com",
          "description" : "Alert email"
        },
        "password" : {
          "type" : "string",
          "example" : "XurenRknsc",
          "description" : "Email password"
        },
        "confirmPassword" : {
          "type" : "string",
          "example" : "XurenRknsc",
          "description" : "Email password"
        },
        "name" : {
          "type" : "string",
          "example" : "Test alert",
          "description" : "Alert name"
        },
        "features" : {
          "type" : "object",
          "description" : "Feature",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "alertingData" : {
          "$ref" : "#/definitions/Alert Detail"
        },
        "smtpData" : {
          "$ref" : "#/definitions/Smtp Data"
        },
        "callhomeLevel" : {
          "type" : "string"
        }
      },
      "description" : "Alerts associated with customers"
    },
    "Metrics" : {
      "type" : "object",
      "required" : [ "metrics", "start" ],
      "properties" : {
        "metrics" : {
          "type" : "array",
          "description" : "metrics",
          "items" : {
            "type" : "string"
          }
        },
        "start" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Start time"
        },
        "end" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "End time"
        },
        "nodePrefix" : {
          "type" : "string",
          "description" : "Node prefix"
        },
        "nodeName" : {
          "type" : "string",
          "description" : "Node name"
        }
      },
      "description" : "Metrics details"
    },
    "Users" : {
      "type" : "object",
      "required" : [ "email" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "User uuid",
          "readOnly" : true
        },
        "customerUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Customer uuid",
          "readOnly" : true
        },
        "email" : {
          "type" : "string",
          "example" : "username1@email.com",
          "description" : "User email id"
        },
        "creationDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2021-06-17 15:00:05",
          "description" : "Creation time",
          "readOnly" : true
        },
        "authTokenIssueDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "1624255408795",
          "description" : "Token issued date",
          "readOnly" : true
        },
        "features" : {
          "description" : "Features",
          "readOnly" : true,
          "$ref" : "#/definitions/JsonNode"
        },
        "role" : {
          "type" : "string",
          "description" : "User role",
          "enum" : [ "Admin", "ReadOnly", "SuperAdmin", "BackupAdmin" ]
        },
        "isPrimary" : {
          "type" : "boolean",
          "description" : "User is primary user or not"
        }
      },
      "description" : "Users associated customers."
    },
    "User Register" : {
      "type" : "object",
      "required" : [ "email", "role" ],
      "properties" : {
        "email" : {
          "type" : "string",
          "example" : "test@gmail.com",
          "description" : "User email address"
        },
        "password" : {
          "type" : "string",
          "example" : "Test@1234",
          "description" : "User password"
        },
        "confirmPassword" : {
          "type" : "string",
          "example" : "Test@1234",
          "description" : "User password"
        },
        "features" : {
          "type" : "object",
          "description" : "User Features",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "role" : {
          "type" : "string",
          "example" : "Admin",
          "description" : "User role",
          "enum" : [ "Admin", "ReadOnly", "SuperAdmin", "BackupAdmin" ]
        }
      },
      "description" : "User registration data"
    },
    "ConfigEntry" : {
      "type" : "object",
      "required" : [ "inherited", "key", "value" ],
      "properties" : {
        "inherited" : {
          "type" : "boolean"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "RuntimeConfigFormData" : {
      "type" : "object",
      "required" : [ "scopedConfigList" ],
      "properties" : {
        "scopedConfigList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ScopedConfig"
          }
        }
      }
    },
    "ScopedConfig" : {
      "type" : "object",
      "required" : [ "configEntries", "mutableScope", "type", "uuid" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "GLOBAL", "CUSTOMER", "UNIVERSE", "PROVIDER" ]
        },
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "mutableScope" : {
          "type" : "boolean"
        },
        "configEntries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigEntry"
          }
        }
      }
    },
    "RegionFormData" : {
      "type" : "object",
      "required" : [ "code", "destVpcId", "hostVpcId", "hostVpcRegion", "latitude", "longitude", "name", "ybImage" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "ybImage" : {
          "type" : "string"
        },
        "hostVpcRegion" : {
          "type" : "string"
        },
        "hostVpcId" : {
          "type" : "string"
        },
        "destVpcId" : {
          "type" : "string"
        },
        "latitude" : {
          "type" : "number",
          "format" : "double"
        },
        "longitude" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "Generic error response from Yugawware Platform API" : {
      "type" : "object",
      "required" : [ "success" ],
      "properties" : {
        "success" : {
          "type" : "boolean"
        },
        "error" : {
          "type" : "string",
          "example" : "There was a problem creating universe",
          "description" : "User visible unstructurred error message"
        }
      }
    },
    "Customer Task Data" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Customer Task UUID"
        },
        "title" : {
          "type" : "string",
          "example" : "Deleted Universe : test-universe",
          "description" : "Customer Task title"
        },
        "percentComplete" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100,
          "description" : "Customer Task percentage completed"
        },
        "createTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "1624295417405",
          "description" : "Customer Task creation time"
        },
        "completionTime" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "1624295417405",
          "description" : "Customer Task completion time"
        },
        "target" : {
          "type" : "string",
          "example" : "Universe",
          "description" : "Customer Task target"
        },
        "targetUUID" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Customer Task target UUID"
        },
        "type" : {
          "type" : "string",
          "example" : "Delete",
          "description" : "Customer Task type"
        },
        "status" : {
          "type" : "string",
          "example" : "Complete",
          "description" : "Customer Task status"
        }
      },
      "description" : "Customer Task data"
    },
    "CustomerLoginFormData" : {
      "type" : "object",
      "required" : [ "email", "password" ],
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "CloudSpecificInfo" : {
      "type" : "object",
      "required" : [ "assignPublicIP", "az", "cloud", "instance_type", "mount_roots", "private_dns", "private_ip", "public_dns", "public_ip", "region", "subnet_id", "useTimeSync" ],
      "properties" : {
        "private_ip" : {
          "type" : "string"
        },
        "public_ip" : {
          "type" : "string"
        },
        "public_dns" : {
          "type" : "string"
        },
        "private_dns" : {
          "type" : "string"
        },
        "instance_type" : {
          "type" : "string"
        },
        "subnet_id" : {
          "type" : "string"
        },
        "az" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        },
        "cloud" : {
          "type" : "string"
        },
        "assignPublicIP" : {
          "type" : "boolean"
        },
        "useTimeSync" : {
          "type" : "boolean"
        },
        "mount_roots" : {
          "type" : "string"
        }
      }
    },
    "Cluster" : {
      "type" : "object",
      "required" : [ "clusterType", "index", "placementInfo", "userIntent", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "clusterType" : {
          "type" : "string",
          "enum" : [ "PRIMARY", "ASYNC" ]
        },
        "userIntent" : {
          "$ref" : "#/definitions/UserIntent"
        },
        "placementInfo" : {
          "$ref" : "#/definitions/PlacementInfo"
        },
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "regions" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Region"
          }
        }
      }
    },
    "CommunicationPorts" : {
      "type" : "object",
      "required" : [ "masterHttpPort", "masterRpcPort", "nodeExporterPort", "redisServerHttpPort", "redisServerRpcPort", "tserverHttpPort", "tserverRpcPort", "yqlServerHttpPort", "yqlServerRpcPort", "ysqlServerHttpPort", "ysqlServerRpcPort" ],
      "properties" : {
        "masterHttpPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "masterRpcPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tserverHttpPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tserverRpcPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "redisServerHttpPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "redisServerRpcPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "yqlServerHttpPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "yqlServerRpcPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ysqlServerHttpPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ysqlServerRpcPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nodeExporterPort" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "DeviceInfo" : {
      "type" : "object",
      "required" : [ "diskIops", "mountPoints", "numVolumes", "storageClass", "storageType", "throughput", "volumeSize" ],
      "properties" : {
        "volumeSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numVolumes" : {
          "type" : "integer",
          "format" : "int32"
        },
        "diskIops" : {
          "type" : "integer",
          "format" : "int32"
        },
        "throughput" : {
          "type" : "integer",
          "format" : "int32"
        },
        "storageClass" : {
          "type" : "string"
        },
        "mountPoints" : {
          "type" : "string"
        },
        "storageType" : {
          "type" : "string",
          "enum" : [ "IO1", "GP2", "GP3", "Scratch", "Persistent", "StandardSSD_LRS", "Premium_LRS", "UltraSSD_LRS" ]
        }
      }
    },
    "EncryptionAtRestConfig" : {
      "type" : "object",
      "required" : [ "encryptionAtRestEnabled", "kmsConfigUUID", "opType", "type" ],
      "properties" : {
        "encryptionAtRestEnabled" : {
          "type" : "boolean"
        },
        "kmsConfigUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "opType" : {
          "type" : "string",
          "enum" : [ "ENABLE", "DISABLE", "UNDEFINED" ]
        },
        "type" : {
          "type" : "string",
          "enum" : [ "CMK", "DATA_KEY" ]
        }
      }
    },
    "ExtraDependencies" : {
      "type" : "object",
      "required" : [ "installNodeExporter" ],
      "properties" : {
        "installNodeExporter" : {
          "type" : "boolean"
        }
      }
    },
    "NodeDetails" : {
      "type" : "object",
      "required" : [ "azUuid", "cloudInfo", "cronsActive", "isMaster", "isRedisServer", "isTserver", "isYqlServer", "isYsqlServer", "machineImage", "masterHttpPort", "masterRpcPort", "nodeExporterPort", "nodeIdx", "nodeName", "nodeUuid", "placementUuid", "redisServerHttpPort", "redisServerRpcPort", "state", "tserverHttpPort", "tserverRpcPort", "yqlServerHttpPort", "yqlServerRpcPort", "ysqlServerHttpPort", "ysqlServerRpcPort" ],
      "properties" : {
        "nodeIdx" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nodeName" : {
          "type" : "string"
        },
        "nodeUuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "cloudInfo" : {
          "$ref" : "#/definitions/CloudSpecificInfo"
        },
        "azUuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "placementUuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "machineImage" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ToBeAdded", "ToJoinCluster", "Provisioned", "SoftwareInstalled", "UpgradeSoftware", "UpdateGFlags", "Live", "Stopping", "Starting", "Stopped", "Unreachable", "ToBeRemoved", "Removing", "Removed", "Adding", "BeingDecommissioned", "Decommissioned", "UpdateCert", "ToggleTls" ]
        },
        "isMaster" : {
          "type" : "boolean"
        },
        "masterHttpPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "masterRpcPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isTserver" : {
          "type" : "boolean"
        },
        "tserverHttpPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tserverRpcPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isRedisServer" : {
          "type" : "boolean"
        },
        "redisServerHttpPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "redisServerRpcPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isYqlServer" : {
          "type" : "boolean"
        },
        "yqlServerHttpPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "yqlServerRpcPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isYsqlServer" : {
          "type" : "boolean"
        },
        "ysqlServerHttpPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ysqlServerRpcPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "nodeExporterPort" : {
          "type" : "integer",
          "format" : "int32"
        },
        "cronsActive" : {
          "type" : "boolean"
        }
      }
    },
    "PlacementAZ" : {
      "type" : "object",
      "required" : [ "isAffinitized", "name", "numNodesInAZ", "replicationFactor", "subnet", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "name" : {
          "type" : "string"
        },
        "replicationFactor" : {
          "type" : "integer",
          "format" : "int32"
        },
        "subnet" : {
          "type" : "string"
        },
        "numNodesInAZ" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isAffinitized" : {
          "type" : "boolean"
        }
      }
    },
    "PlacementCloud" : {
      "type" : "object",
      "required" : [ "code", "regionList", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "code" : {
          "type" : "string"
        },
        "regionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlacementRegion"
          }
        }
      }
    },
    "PlacementInfo" : {
      "type" : "object",
      "required" : [ "cloudList" ],
      "properties" : {
        "cloudList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlacementCloud"
          }
        }
      }
    },
    "PlacementRegion" : {
      "type" : "object",
      "required" : [ "azList", "code", "name", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "code" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "azList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlacementAZ"
          }
        }
      }
    },
    "UniverseDefinitionTaskParams" : {
      "type" : "object",
      "required" : [ "allowInsecure", "backupInProgress", "capability", "clientRootCA", "clusters", "cmkArn", "communicationPorts", "currentClusterType", "deviceInfo", "encryptionAtRestConfig", "errorString", "expectedUniverseVersion", "extraDependencies", "firstTry", "importedState", "itestS3PackagePath", "nextClusterIndex", "nodeDetailsSet", "nodeExporterUser", "nodePrefix", "remotePackagePath", "resetAZConfig", "rootAndClientRootCASame", "rootCA", "setTxnTableWaitCountFlag", "universePaused", "universeUUID", "updateInProgress", "updateSucceeded", "userAZSelected" ],
      "properties" : {
        "errorString" : {
          "type" : "string"
        },
        "nodeExporterUser" : {
          "type" : "string"
        },
        "deviceInfo" : {
          "$ref" : "#/definitions/DeviceInfo"
        },
        "universeUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "expectedUniverseVersion" : {
          "type" : "integer",
          "format" : "int32"
        },
        "cmkArn" : {
          "type" : "string"
        },
        "encryptionAtRestConfig" : {
          "$ref" : "#/definitions/EncryptionAtRestConfig"
        },
        "nodeDetailsSet" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/NodeDetails"
          }
        },
        "communicationPorts" : {
          "$ref" : "#/definitions/CommunicationPorts"
        },
        "extraDependencies" : {
          "$ref" : "#/definitions/ExtraDependencies"
        },
        "firstTry" : {
          "type" : "boolean"
        },
        "clusters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Cluster"
          }
        },
        "currentClusterType" : {
          "type" : "string",
          "enum" : [ "PRIMARY", "ASYNC" ]
        },
        "nodePrefix" : {
          "type" : "string"
        },
        "rootCA" : {
          "type" : "string",
          "format" : "uuid"
        },
        "clientRootCA" : {
          "type" : "string",
          "format" : "uuid"
        },
        "rootAndClientRootCASame" : {
          "type" : "boolean"
        },
        "userAZSelected" : {
          "type" : "boolean"
        },
        "resetAZConfig" : {
          "type" : "boolean"
        },
        "updateInProgress" : {
          "type" : "boolean"
        },
        "backupInProgress" : {
          "type" : "boolean"
        },
        "updateSucceeded" : {
          "type" : "boolean"
        },
        "universePaused" : {
          "type" : "boolean"
        },
        "nextClusterIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "allowInsecure" : {
          "type" : "boolean"
        },
        "setTxnTableWaitCountFlag" : {
          "type" : "boolean"
        },
        "itestS3PackagePath" : {
          "type" : "string"
        },
        "remotePackagePath" : {
          "type" : "string"
        },
        "importedState" : {
          "type" : "string",
          "enum" : [ "NONE", "STARTED", "MASTERS_ADDED", "TSERVERS_ADDED", "IMPORTED" ]
        },
        "capability" : {
          "type" : "string",
          "enum" : [ "READ_ONLY", "EDITS_ALLOWED" ]
        }
      }
    },
    "UserIntent" : {
      "type" : "object",
      "required" : [ "accessKeyCode", "assignPublicIP", "awsArnString", "deviceInfo", "enableClientToNodeEncrypt", "enableExposingService", "enableIPV6", "enableNodeToNodeEncrypt", "enableVolumeEncryption", "enableYEDIS", "enableYSQL", "instanceTags", "instanceType", "masterGFlags", "numNodes", "preferredRegion", "provider", "providerType", "regionList", "replicationFactor", "tserverGFlags", "universeName", "useHostname", "useTimeSync", "ybSoftwareVersion" ],
      "properties" : {
        "universeName" : {
          "type" : "string"
        },
        "provider" : {
          "type" : "string"
        },
        "providerType" : {
          "type" : "string",
          "enum" : [ "unknown", "aws", "gcp", "azu", "docker", "onprem", "kubernetes", "local", "other" ]
        },
        "replicationFactor" : {
          "type" : "integer",
          "format" : "int32"
        },
        "regionList" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "preferredRegion" : {
          "type" : "string",
          "format" : "uuid"
        },
        "instanceType" : {
          "type" : "string"
        },
        "numNodes" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ybSoftwareVersion" : {
          "type" : "string"
        },
        "accessKeyCode" : {
          "type" : "string"
        },
        "deviceInfo" : {
          "$ref" : "#/definitions/DeviceInfo"
        },
        "assignPublicIP" : {
          "type" : "boolean"
        },
        "useTimeSync" : {
          "type" : "boolean"
        },
        "enableYSQL" : {
          "type" : "boolean"
        },
        "enableYEDIS" : {
          "type" : "boolean"
        },
        "enableNodeToNodeEncrypt" : {
          "type" : "boolean"
        },
        "enableClientToNodeEncrypt" : {
          "type" : "boolean"
        },
        "enableVolumeEncryption" : {
          "type" : "boolean"
        },
        "enableIPV6" : {
          "type" : "boolean"
        },
        "enableExposingService" : {
          "type" : "string",
          "enum" : [ "NONE", "EXPOSED", "UNEXPOSED" ]
        },
        "awsArnString" : {
          "type" : "string"
        },
        "useHostname" : {
          "type" : "boolean"
        },
        "masterGFlags" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "tserverGFlags" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "instanceTags" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "UpgradeParams" : {
      "type" : "object",
      "required" : [ "allowInsecure", "backupInProgress", "capability", "certUUID", "clientRootCA", "clusters", "cmkArn", "communicationPorts", "currentClusterType", "deviceInfo", "enableClientToNodeEncrypt", "enableNodeToNodeEncrypt", "encryptionAtRestConfig", "errorString", "expectedUniverseVersion", "extraDependencies", "firstTry", "forceVMImageUpgrade", "importedState", "itestS3PackagePath", "machineImages", "masterGFlags", "nextClusterIndex", "nodeDetailsSet", "nodeExporterUser", "nodePrefix", "remotePackagePath", "resetAZConfig", "rootAndClientRootCASame", "rootCA", "rotateRoot", "setTxnTableWaitCountFlag", "sleepAfterMasterRestartMillis", "sleepAfterTServerRestartMillis", "taskType", "tserverGFlags", "universePaused", "universeUUID", "updateInProgress", "updateSucceeded", "upgradeOption", "userAZSelected", "ybSoftwareVersion" ],
      "properties" : {
        "errorString" : {
          "type" : "string"
        },
        "nodeExporterUser" : {
          "type" : "string"
        },
        "deviceInfo" : {
          "$ref" : "#/definitions/DeviceInfo"
        },
        "universeUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "expectedUniverseVersion" : {
          "type" : "integer",
          "format" : "int32"
        },
        "cmkArn" : {
          "type" : "string"
        },
        "encryptionAtRestConfig" : {
          "$ref" : "#/definitions/EncryptionAtRestConfig"
        },
        "nodeDetailsSet" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/NodeDetails"
          }
        },
        "communicationPorts" : {
          "$ref" : "#/definitions/CommunicationPorts"
        },
        "extraDependencies" : {
          "$ref" : "#/definitions/ExtraDependencies"
        },
        "firstTry" : {
          "type" : "boolean"
        },
        "clusters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Cluster"
          }
        },
        "currentClusterType" : {
          "type" : "string",
          "enum" : [ "PRIMARY", "ASYNC" ]
        },
        "nodePrefix" : {
          "type" : "string"
        },
        "rootCA" : {
          "type" : "string",
          "format" : "uuid"
        },
        "clientRootCA" : {
          "type" : "string",
          "format" : "uuid"
        },
        "rootAndClientRootCASame" : {
          "type" : "boolean"
        },
        "userAZSelected" : {
          "type" : "boolean"
        },
        "resetAZConfig" : {
          "type" : "boolean"
        },
        "updateInProgress" : {
          "type" : "boolean"
        },
        "backupInProgress" : {
          "type" : "boolean"
        },
        "updateSucceeded" : {
          "type" : "boolean"
        },
        "universePaused" : {
          "type" : "boolean"
        },
        "nextClusterIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "allowInsecure" : {
          "type" : "boolean"
        },
        "setTxnTableWaitCountFlag" : {
          "type" : "boolean"
        },
        "itestS3PackagePath" : {
          "type" : "string"
        },
        "remotePackagePath" : {
          "type" : "string"
        },
        "importedState" : {
          "type" : "string",
          "enum" : [ "NONE", "STARTED", "MASTERS_ADDED", "TSERVERS_ADDED", "IMPORTED" ]
        },
        "capability" : {
          "type" : "string",
          "enum" : [ "READ_ONLY", "EDITS_ALLOWED" ]
        },
        "taskType" : {
          "type" : "string",
          "enum" : [ "Everything", "Software", "VMImage", "GFlags", "Restart", "Certs", "ToggleTls" ]
        },
        "ybSoftwareVersion" : {
          "type" : "string"
        },
        "machineImages" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "forceVMImageUpgrade" : {
          "type" : "boolean"
        },
        "certUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "rotateRoot" : {
          "type" : "boolean"
        },
        "enableNodeToNodeEncrypt" : {
          "type" : "boolean"
        },
        "enableClientToNodeEncrypt" : {
          "type" : "boolean"
        },
        "masterGFlags" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "tserverGFlags" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "sleepAfterMasterRestartMillis" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sleepAfterTServerRestartMillis" : {
          "type" : "integer",
          "format" : "int32"
        },
        "upgradeOption" : {
          "type" : "string",
          "enum" : [ "Rolling", "Non-Rolling", "Non-Restart" ]
        }
      }
    },
    "DiskIncreaseFormData" : {
      "type" : "object",
      "required" : [ "allowInsecure", "backupInProgress", "capability", "clientRootCA", "clusters", "cmkArn", "communicationPorts", "currentClusterType", "deviceInfo", "encryptionAtRestConfig", "errorString", "expectedUniverseVersion", "extraDependencies", "firstTry", "importedState", "itestS3PackagePath", "nextClusterIndex", "nodeDetailsSet", "nodeExporterUser", "nodePrefix", "remotePackagePath", "resetAZConfig", "rootAndClientRootCASame", "rootCA", "setTxnTableWaitCountFlag", "size", "universePaused", "universeUUID", "updateInProgress", "updateSucceeded", "userAZSelected" ],
      "properties" : {
        "errorString" : {
          "type" : "string"
        },
        "nodeExporterUser" : {
          "type" : "string"
        },
        "deviceInfo" : {
          "$ref" : "#/definitions/DeviceInfo"
        },
        "universeUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "expectedUniverseVersion" : {
          "type" : "integer",
          "format" : "int32"
        },
        "cmkArn" : {
          "type" : "string"
        },
        "encryptionAtRestConfig" : {
          "$ref" : "#/definitions/EncryptionAtRestConfig"
        },
        "nodeDetailsSet" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/NodeDetails"
          }
        },
        "communicationPorts" : {
          "$ref" : "#/definitions/CommunicationPorts"
        },
        "extraDependencies" : {
          "$ref" : "#/definitions/ExtraDependencies"
        },
        "firstTry" : {
          "type" : "boolean"
        },
        "clusters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Cluster"
          }
        },
        "currentClusterType" : {
          "type" : "string",
          "enum" : [ "PRIMARY", "ASYNC" ]
        },
        "nodePrefix" : {
          "type" : "string"
        },
        "rootCA" : {
          "type" : "string",
          "format" : "uuid"
        },
        "clientRootCA" : {
          "type" : "string",
          "format" : "uuid"
        },
        "rootAndClientRootCASame" : {
          "type" : "boolean"
        },
        "userAZSelected" : {
          "type" : "boolean"
        },
        "resetAZConfig" : {
          "type" : "boolean"
        },
        "updateInProgress" : {
          "type" : "boolean"
        },
        "backupInProgress" : {
          "type" : "boolean"
        },
        "updateSucceeded" : {
          "type" : "boolean"
        },
        "universePaused" : {
          "type" : "boolean"
        },
        "nextClusterIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "allowInsecure" : {
          "type" : "boolean"
        },
        "setTxnTableWaitCountFlag" : {
          "type" : "boolean"
        },
        "itestS3PackagePath" : {
          "type" : "string"
        },
        "remotePackagePath" : {
          "type" : "string"
        },
        "importedState" : {
          "type" : "string",
          "enum" : [ "NONE", "STARTED", "MASTERS_ADDED", "TSERVERS_ADDED", "IMPORTED" ]
        },
        "capability" : {
          "type" : "string",
          "enum" : [ "READ_ONLY", "EDITS_ALLOWED" ]
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "ArrayNode" : {
      "type" : "object",
      "required" : [ "array", "bigDecimal", "bigInteger", "binary", "boolean", "containerNode", "double", "float", "floatingPointNumber", "int", "integralNumber", "long", "missingNode", "nodeType", "null", "number", "object", "pojo", "short", "textual", "valueNode" ],
      "properties" : {
        "nodeType" : {
          "type" : "string",
          "enum" : [ "ARRAY", "BINARY", "BOOLEAN", "MISSING", "NULL", "NUMBER", "OBJECT", "POJO", "STRING" ]
        },
        "array" : {
          "type" : "boolean"
        },
        "object" : {
          "type" : "boolean"
        },
        "valueNode" : {
          "type" : "boolean"
        },
        "containerNode" : {
          "type" : "boolean"
        },
        "missingNode" : {
          "type" : "boolean"
        },
        "pojo" : {
          "type" : "boolean"
        },
        "number" : {
          "type" : "boolean"
        },
        "integralNumber" : {
          "type" : "boolean"
        },
        "floatingPointNumber" : {
          "type" : "boolean"
        },
        "short" : {
          "type" : "boolean"
        },
        "int" : {
          "type" : "boolean"
        },
        "long" : {
          "type" : "boolean"
        },
        "double" : {
          "type" : "boolean"
        },
        "bigDecimal" : {
          "type" : "boolean"
        },
        "bigInteger" : {
          "type" : "boolean"
        },
        "textual" : {
          "type" : "boolean"
        },
        "boolean" : {
          "type" : "boolean"
        },
        "binary" : {
          "type" : "boolean"
        },
        "null" : {
          "type" : "boolean"
        },
        "float" : {
          "type" : "boolean"
        }
      }
    },
    "CertificateInfo" : {
      "type" : "object",
      "required" : [ "certType", "certificate", "checksum", "customCertInfo", "customServerCertInfo", "customerUUID", "expiryDate", "inUse", "label", "privateKey", "startDate", "universeDetails", "uuid" ],
      "properties" : {
        "uuid" : {
          "type" : "string",
          "format" : "uuid"
        },
        "customerUUID" : {
          "type" : "string",
          "format" : "uuid"
        },
        "label" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "expiryDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "privateKey" : {
          "type" : "string"
        },
        "certificate" : {
          "type" : "string"
        },
        "certType" : {
          "type" : "string",
          "enum" : [ "SelfSigned", "CustomCertHostPath", "CustomServerCert" ]
        },
        "checksum" : {
          "type" : "string"
        },
        "customCertInfo" : {
          "$ref" : "#/definitions/CustomCertInfo"
        },
        "universeDetails" : {
          "$ref" : "#/definitions/ArrayNode"
        },
        "customServerCertInfo" : {
          "$ref" : "#/definitions/CustomServerCertInfo"
        },
        "inUse" : {
          "type" : "boolean"
        }
      }
    },
    "CustomCertInfo" : {
      "type" : "object",
      "required" : [ "clientCertPath", "clientKeyPath", "nodeCertPath", "nodeKeyPath", "rootCertPath" ],
      "properties" : {
        "nodeCertPath" : {
          "type" : "string"
        },
        "nodeKeyPath" : {
          "type" : "string"
        },
        "rootCertPath" : {
          "type" : "string"
        },
        "clientCertPath" : {
          "type" : "string"
        },
        "clientKeyPath" : {
          "type" : "string"
        }
      }
    },
    "CustomServerCertInfo" : {
      "type" : "object",
      "required" : [ "serverCert", "serverKey" ],
      "properties" : {
        "serverCert" : {
          "type" : "string"
        },
        "serverKey" : {
          "type" : "string"
        }
      }
    },
    "Availability Zones" : {
      "type" : "object",
      "required" : [ "code", "name" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Az code"
        },
        "name" : {
          "type" : "string",
          "description" : "Az name"
        },
        "subnet" : {
          "type" : "string",
          "description" : "Az subnet"
        }
      },
      "description" : "Availability Zones."
    },
    "AvailabilityZoneFormData" : {
      "type" : "object",
      "required" : [ "availabilityZones" ],
      "properties" : {
        "availabilityZones" : {
          "type" : "array",
          "description" : "Availability zones",
          "items" : {
            "$ref" : "#/definitions/Availability Zones"
          }
        }
      }
    },
    "UniverseResource" : {
      "type" : "object",
      "properties" : {
        "pricePerHour" : {
          "type" : "number",
          "format" : "double",
          "description" : "Price per hour"
        },
        "ebsPricePerHour" : {
          "type" : "number",
          "format" : "double",
          "description" : "EBS price per hour"
        },
        "numCores" : {
          "type" : "number",
          "format" : "double",
          "description" : "Numbers of cores"
        },
        "memSizeGB" : {
          "type" : "number",
          "format" : "double",
          "description" : "Memory GB"
        },
        "volumeCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Volume count"
        },
        "volumeSizeGB" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Volume in GB"
        },
        "numNodes" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Numbers of node"
        },
        "gp3FreePiops" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "gp3 free piops"
        },
        "gp3FreeThroughput" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "gp3 free throughput"
        },
        "azList" : {
          "type" : "array",
          "description" : "Azs",
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Universe Resource"
    }
  },
  "externalDocs" : {
    "description" : "About Yugabyte Platform",
    "url" : "https://docs.yugabyte.com"
  }
}